b alternate_sum_4_using_c
r
c
continue
quit
b alternate_sum_4_using_c
run
continue
continue
quit
b ABI.asm:36
r
delete 1
n
n
n
n
n
n
si
n
n
b ABI.asm:69
c
quit
b ABI.asm:69
r
r
quit
b ABI.asm:36
r
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
quit
b ABI.asm:36
run
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
si
n
quit
b ABI.asm:65
r
n
si
si
si
si
si
si
si
si
si
si
si
si
r
r
quit
b ABI.asm:36
r
b ABI.asm:65
c
b ABI.asm:71
c
quit
b ABI.asm:65
r
n
si
b ABI.asm:71
c
n
n
n
n
p $rcx
p *$rbp
p *(uint32_t)$rbp
p *(uint32_t*)$rbp
p *(uint32_t*)($rbp-8)
quit
b ABI.asm:104
r
p *(uint32_t*)($rsp)
p *(uint32_t*)($rsp-8)
p *(uint32_t*)($rsp-16)
p *(uint32_t*)($rsp-24)
p *(uint32_t*)($rbp)
p *(uint32_t*)($rbp-8)
p *(uint32_t*)($rbp-16)
n
n
p *(uint32_t*)($rbp-8)
p *(uint32_t*)($rbp-16)
p *(uint32_t*)($rsp)
p *(uint32_t*)($rsp-8)
p *(uint32_t*)($rsp-16)
p *(uint32_t*)($rsp-24)
p *(uint32_t*)($rsp-30)
p *(uint32_t*)($rsp-38)
r
n
p *(uint32_t*)($rbp-16)
p *(uint32_t*)($rsp-8)
p *(uint32_t*)($rbp-8)
p *(uint32_t*)($rsp+32)
p *(uint32_t*)($rsp+40)
p *(uint32_t*)($rsp+24)
p *(uint32_t*)($rsp+16)
n
p *(uint32_t*)($rsp+16)
p *(uint32_t*)($rsp+24)
quit
b ABI.asm:104
r
p *(uint32_t*)($rbp)
p *(uint32_t*)($rbp-8)
p *(uint32_t*)($rbp-16)
Quit
quit
b ABI.asm:127
r
n
$xmm0
p $xmm0
n
n
p $xmm1
n
n
p $rax
n
p $[rdi]
p $rdi
p $*rdi
p *(uint32_t*)$rdi
si
quit
